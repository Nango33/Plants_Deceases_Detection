import streamlit as st
import tensorflow as tf
import numpy as np


#Tensorflow Model Prediction
def model_prediction(test_image):
    model = tf.keras.models.load_model("trained_model.keras")
    image = tf.keras.preprocessing.image.load_img(test_image,target_size=(128,128))
    input_arr = tf.keras.preprocessing.image.img_to_array(image)
    input_arr = np.array([input_arr]) #convert single image to batch
    predictions = model.predict(input_arr)
    return np.argmax(predictions) #return index of max element

#Sidebar
st.sidebar.title("Dashboard")
app_mode = st.sidebar.selectbox("Select Page",["Acceuil","√Ä propos","Reconnaissance des Maladies"])

#Main Page
if(app_mode=="Acceuil"):
    st.header("SYST√àME DE RECONNAISSANCE DES MALADIES DES PLANTES")
    image_path = "home_page.jpeg"
    st.image(image_path,use_column_width=True)
    st.markdown("""
    
Bienvenue dans le Syst√®me de Reconnaissance des Maladies des Plantes ! üåøüîç
    
Notre mission est d'aider √† identifier les maladies des plantes de mani√®re efficace. T√©l√©chargez une image d'une plante, et notre syst√®me l'analysera pour d√©tecter d'√©ventuels signes de maladies. Ensemble, prot√©geons nos cultures et assurons une r√©colte plus saine !

### Comment √ßa marche ?
1. **T√©l√©chargez l'image:** Rendez-vous sur la page de**Disease Recognition** et t√©l√©chargez une image d'une plante pr√©sentant des sympt√¥mes suspects.
2. **Analyse:** Notre syst√®me traitera l'image √† l'aide d'algorithmes avanc√©s pour identifier d'√©ventuelles maladies.
3. **R√©sultats:** Consultez les r√©sultats et les recommandations pour les actions √† entreprendre.

### Pourquoi nous choisir ?
- **Pr√©cision:** Notre syst√®me utilise des techniques d'apprentissage automatique de pointe pour une d√©tection pr√©cise des maladies.
- **Facilit√© d'utilisation:** Interface simple et intuitive pour une exp√©rience utilisateur fluide.
- **Rapide et efficace :** Recevez les r√©sultats en quelques secondes, permettant une prise de d√©cision rapide.

### Commencez !
Cliquez sur la page de **Disease Recognition** dans la barre lat√©rale pour t√©l√©charger une image et d√©couvrir la puissance de notre Syst√®me de Reconnaissance des Maladies des Plantes!

""")

#√Ä propos
elif(app_mode=="√Ä propos"):
    st.header("√Ä propos")
    st.markdown("""
                #### √Ä propos du jeu de donn√©es
                Ce jeu de donn√©es a √©t√© recr√©√© √† l'aide d'une augmentation hors ligne √† partir du jeu de donn√©es original. Le jeu de donn√©es original peut √™tre trouv√© sur ce d√©p√¥t GitHub.
                Ce jeu de donn√©es se compose d'environ 87 000 images RGB de feuilles de cultures saines et malades, class√©es en 38 cat√©gories diff√©rentes. L'ensemble total du jeu de donn√©es est divis√© selon un ratio de 80/20 entre l'ensemble d'entra√Ænement et l'ensemble de validation, tout en pr√©servant la structure des r√©pertoires.
                Un nouveau r√©pertoire contenant 33 images de test a ensuite √©t√© cr√©√© √† des fins de pr√©diction.
                #### Content
                1. train (70295 images)
                2. test (33 images)
                3. validation (17572 images)

                """)

#Prediction Page
elif(app_mode=="Reconnaissance des Maladies"):
    st.header("Reconnaissance des Maladies")
    test_image = st.file_uploader("Choisissez une image:")
    if(st.button("Afficher l'image")):
        st.image(test_image,width=4,use_column_width=True)
    #Predict button
    if(st.button("Pr√©dire")):
        st.snow()
        st.write("Our Prediction")
        result_index = model_prediction(test_image)
        #Reading Labels
        class_name = ['Apple___Apple_scab', 'Apple___Black_rot', 'Apple___Cedar_apple_rust', 'Apple___healthy',
                    'Blueberry___healthy', 'Cherry_(including_sour)___Powdery_mildew', 
                    'Cherry_(including_sour)___healthy', 'Corn_(maize)___Cercospora_leaf_spot Gray_leaf_spot', 
                    'Corn_(maize)___Common_rust_', 'Corn_(maize)___Northern_Leaf_Blight', 'Corn_(maize)___healthy', 
                    'Grape___Black_rot', 'Grape___Esca_(Black_Measles)', 'Grape___Leaf_blight_(Isariopsis_Leaf_Spot)', 
                    'Grape___healthy', 'Orange___Haunglongbing_(Citrus_greening)', 'Peach___Bacterial_spot',
                    'Peach___healthy', 'Pepper,_bell___Bacterial_spot', 'Pepper,_bell___healthy', 
                    'Potato___Early_blight', 'Potato___Late_blight', 'Potato___healthy', 
                    'Raspberry___healthy', 'Soybean___healthy', 'Squash___Powdery_mildew', 
                    'Strawberry___Leaf_scorch', 'Strawberry___healthy', 'Tomato___Bacterial_spot', 
                    'Tomato___Early_blight', 'Tomato___Late_blight', 'Tomato___Leaf_Mold', 
                    'Tomato___Septoria_leaf_spot', 'Tomato___Spider_mites Two-spotted_spider_mite', 
                    'Tomato___Target_Spot', 'Tomato___Tomato_Yellow_Leaf_Curl_Virus', 'Tomato___Tomato_mosaic_virus',
                      'Tomato___healthy']
        st.success("Model is Predicting it's a {}".format(class_name[result_index]))